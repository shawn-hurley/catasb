---
  - name: Curling ansible-service-broker-all.yaml
    get_url:
      url: "{{ asb_template_url }}"
      force: yes
      dest: "{{ local_target_asb_template }}"

  - name: Setting facts for rendering ansible-service-broker-all.yaml template
    set_fact:
      dockerhub_pass: "{{ dockerhub_user_password }}"
      dockerhub_user: "{{ dockerhub_user_name }}"
      dockerhub_org: "{{ dockerhub_org_name }}"
      openshift_pass: "{{ cluster_user_password }}"
      openshift_user: "{{ cluster_user }}"
      openshift_target: "{{ openshift_url }}"

  - name: check if the {{ asb_project }} project exists
    shell: "{{ oc_cmd }} get project --no-headers=true | awk '{ print $1 }' | grep -E '^{{ asb_project }}( |$)' | cat"
    register: project

  - name: Create a new project for the {{ asb_project }}
    shell: "{{ oc_cmd }} new-project {{ asb_project }}"
    register: new_asb_project
    when: project.stdout.find( "{{ asb_project }}" ) == -1

  - name: Process template "{{ local_target_asb_template }}"
    shell: >
      {{ oc_cmd }}
      process
      -f {{ local_target_asb_template }}
      -n {{ asb_project }}
      -p BROKER_IMAGE={{ broker_image }}
      -p ETCD_IMAGE={{ etcd_image }}
      -p REGISTRY_TYPE={{ broker_registry_type }}
      -p REGISTRY_URL={{ broker_registry_url }}
      -p DEV_BROKER={{ broker_dev_broker }}
      -p DOCKERHUB_ORG={{ dockerhub_org_name }}
      -p DOCKERHUB_PASS={{ dockerhub_user_password }}
      -p DOCKERHUB_USER={{ dockerhub_user_name }}
      -p LAUNCH_APB_ON_BIND={{ broker_launch_apb_on_bind }}
      -p OUTPUT_REQUEST={{ broker_output_request }}
      -p RECOVERY={{ broker_recovery }}
      &> {{ local_target_asb_template_processed }}

  - name: Running oc create on processed template
    shell: "{{ oc_cmd }} create -f {{ local_target_asb_template_processed }}"

  - name: Switch project to {{ asb_project }}
    shell: "{{ oc_cmd }} project {{ asb_project }}"

  - name: Waiting 10 minutes for ASB pod
    action:
      shell "{{ oc_cmd }}" get pods | grep -iEm1 "asb.*?running" | grep -v deploy
    register: wait_for_asb_pod
    until: wait_for_asb_pod.rc == 0
    retries: 60
    delay: 10

  - name: Waiting 10 minutes for ASB etcd pod
    action:
      shell "{{ oc_cmd }}" get pods | grep -iEm1 "etcd.*?running" | grep -v deploy
    register: wait_for_asb_etcd_pod
    until: wait_for_asb_etcd_pod.rc == 0
    retries: 60
    delay: 10

  - name: Get route for ansible-service-broker
    shell: "'{{ oc_cmd }}' get routes | grep ansible-service-broker | awk '{print $2}'"
    register: result_get_route_asb
    retries: 6
    delay: 10

  - set_fact:
      ansible_service_broker_route:  "{{ result_get_route_asb.stdout }}"

  - name: Trigger ASB bootstrap to load APBs
    uri:
      url: http://{{ ansible_service_broker_route }}/v2/bootstrap
      method: POST
    register: response
    until: response|success and response.json and response.json.spec_count
    retries: 3
    delay: 30

  - name: Creating /tmp/ansible_service_broker.yaml
    template:
      src: ansible_service_broker.yaml.j2
      dest: /tmp/ansible_service_broker.yaml
      owner: "{{ ansible_env.USER }}"
      mode: 0644
    register: ansible_service_broker_template

  - name: Create Broker resource in Service Catalog
    shell: "{{ kubectl_cmd }} --kubeconfig={{ ansible_env.HOME }}/.kube/service-catalog.config create -f /tmp/ansible_service_broker.yaml"
